Things todo:
    [STARTING] todo list
    [STARTING] parser
        implement parse_prog2 into mkmap.uc
        enhance parse_prog2 so that it can generate a MBF like maps/ori3.mbf
    [ADVANCED] VM
        [DONE] VM code defined (MBF)
        [DONE] VM code loadable
        [DONE] VM code runable
        add image_programs as dynallockable entities in MBF
        add VM_draw_image in MBF
        enable literals of real, decimal ints, and strings in MBF
        fully modularize VM calls
    generalized structures:
        [DONE] rip lambert_proj into proj.[ch]
        [DONE] rip image_struct into image.[ch]
        [DONE] rip program_state into pstate.[ch]-something ???
        objectize struct lambert_proj:
            [DONE] add a proj_type tag first, add definitions for
                [DONE] PROJ_LAMBERT,
                [v1] PROJ_POLAR
                [v1] PROJ_CYLINDRIC (the obvious ones)
            [v1] add polar and cylindric projections
            [??] add a pointer-to function in the lambert_proj type:
                void (* Lambert)(
                    double *x, double *y,
                    double phi, double lambda,                                  
                    lambert_proj *LCCP
                )
            [DONE] make a generalized struct proj, which has just a
                proj_type
            tag first,
                [DONE] * let the struct image_struct point to a proj
                    instead of
                    a lambert_proj
                [DONE] * make a dispatch function anywhere to
                    recognize/convert the proj to lambert_proj or other
                    relevant projections
        let program_state have more than one image_struct
    orderly indexes (“views”):
        implement quicksort myself
            qsort-wikibooks.c
        sort the arrays not after loading the stars, but rather before
            their actual use
    projections:
        implement PROJ_POLAR, PROJ_CYLINDRIC
    objects:
        deep sky
        planets
    views, images:
        implement horizon and adjustable geographical position
        figure insets (overdraw, most likely)
        adjust colors
    programs:
        [DONE (?)] program_state pushing and popping
        [-->] parsing,
        [-->] executing
    generation:
        reduce printout to primitives, circles, lines, letters
        implement EPS
    NYI:
        draw_labels doesn't select labels according to last argument
        (labels ID)
    BUGS:
        F1: a λ₀ outside [0,360[ generates black declination sections in
            the map - avoid (in 2010-07-26)
        F2: a φ₁ or φ₂ outside [-90,90] generates a black map
        F3: the declination circle dots become too tight ±70° and
            polewards (in 2010-07-26)

